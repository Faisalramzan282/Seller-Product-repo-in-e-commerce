{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"w-1/2 border border-2 border-solid divide-y divide-slate-200 mt-8 mb-8 mx-auto\"\n};\nconst _hoisted_2 = {\n  class: \"\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"dropdown\"\n}, \"Status\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  selected: \"\",\n  value: \"Inprogress\"\n}, \"In Progress\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Completed\"\n}, \"Completed\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_4, _hoisted_5];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getTasks, (task, idx) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: idx\n    }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, \"Title: \" + _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Description: \" + _toDisplayString(task.desc), 1 /* TEXT */), _hoisted_3, _withDirectives(_createElementVNode(\"select\", {\n      id: \"dropdown\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedOption = $event)\n    }, _hoisted_6, 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedOption]]), _hoisted_7, _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(idx),\n      class: \"bg-blue-500\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_8)]), _createCommentVNode(\" <button @click=\\\"updateTask(idx)\\\" class=\\\"bg-blue-500\\\">Update</button> \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","selected","value","_hoisted_4","_hoisted_5","_createElementBlock","_Fragment","_renderList","_ctx","getTasks","task","idx","key","_hoisted_1","_hoisted_2","_toDisplayString","title","desc","_hoisted_3","id","$data","selectedOption","$event","_hoisted_7","onClick","$options","deleteTask","_hoisted_8","_createCommentVNode"],"sources":["D:\\Data\\Web Development\\TECNIQE\\14_first_Evaluation\\evaluation\\src\\components\\ViewTask.vue"],"sourcesContent":["<template>\r\n    <div>\r\n       <div>\r\n        <ul>\r\n        <li v-for = \"(task,idx) in getTasks\" :key=\"idx\">\r\n          <div class=\"w-1/2 border border-2 border-solid divide-y divide-slate-200 mt-8 mb-8 mx-auto\">\r\n            <p class=\"\">Title: {{ task.title }}</p> \r\n            <p>Description: {{ task.desc }}</p> \r\n            <label for=\"dropdown\">Status</label>\r\n           <select id=\"dropdown\" v-model=\"selectedOption\">\r\n           <option selected value=\"Inprogress\">In Progress</option>\r\n           <option value=\"Completed\">Completed</option>\r\n           </select> \r\n         <br>\r\n           <button @click=\"deleteTask(idx)\" class=\"bg-blue-500\">Delete</button>\r\n          </div>\r\n           \r\n           <!-- <button @click=\"updateTask(idx)\" class=\"bg-blue-500\">Update</button> -->\r\n        </li>\r\n       </ul>\r\n       </div>\r\n       \r\n    </div>\r\n   \r\n     \r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n    name: \"ViewTask\", \r\n    data(){\r\n         return{\r\n            selectedOption: 'Inprogress'\r\n         }\r\n    },\r\n    methods:{\r\n       deleteTask(idx){\r\n        this.getTasks.splice(idx, 1);\r\n       },\r\n    //    updateTask(idx){\r\n    //     console.log(idx);\r\n    //     console.log(this.task.title)\r\n    //    }\r\n    }, \r\n    computed:{\r\n        ...mapGetters(['getTasks'])\r\n    }\r\n\r\n}\r\n</script>"],"mappings":";;EAKeA,KAAK,EAAC;AAAgF;;EACtFA,KAAK,EAAC;AAAE;gCAEXC,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAU,GAAC,QAAM;gCAE7BD,mBAAA,CAAwD;EAAhDE,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAa,aAAW;gCAC/CH,mBAAA,CAA4C;EAApCG,KAAK,EAAC;AAAW,GAAC,WAAS;oBADnCC,UAAwD,EACxDC,UAA4C,C;gCAE9CL,mBAAA,CAAI;;;uBAZTM,mBAAA,CAqBM,cApBHN,mBAAA,CAkBM,cAjBLA,mBAAA,CAgBI,c,kBAfJM,mBAAA,CAcKC,SAAA,QAAAC,WAAA,CAdsBC,IAAA,CAAAC,QAAQ,GAArBC,IAAI,EAACC,GAAG;yBAAtBN,mBAAA,CAcK;MAdiCO,GAAG,EAAED;IAAG,IAC5CZ,mBAAA,CAUM,OAVNc,UAUM,GATJd,mBAAA,CAAuC,KAAvCe,UAAuC,EAA3B,SAAO,GAAAC,gBAAA,CAAGL,IAAI,CAACM,KAAK,kBAChCjB,mBAAA,CAAmC,WAAhC,eAAa,GAAAgB,gBAAA,CAAGL,IAAI,CAACO,IAAI,kBAC5BC,UAAoC,E,gBACrCnB,mBAAA,CAGS;MAHDoB,EAAE,EAAC,UAAU;iEAAUC,KAAA,CAAAC,cAAc,GAAAC,MAAA;2DAAdF,KAAA,CAAAC,cAAc,E,GAI/CE,UAAI,EACFxB,mBAAA,CAAoE;MAA3DyB,OAAK,EAAAF,MAAA,IAAEG,QAAA,CAAAC,UAAU,CAACf,GAAG;MAAGb,KAAK,EAAC;OAAc,QAAM,iBAAA6B,UAAA,E,GAG3DC,mBAAA,8EAA6E,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}