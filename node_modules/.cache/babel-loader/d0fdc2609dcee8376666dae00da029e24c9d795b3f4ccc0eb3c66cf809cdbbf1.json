{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\n// import VuexPersist from 'vuex-persistedstate';\n\nexport default createStore({\n  state: {\n    userData: [],\n    tasks: [],\n    addToCarts: [],\n    cartsCount: []\n  },\n  mutations: {\n    CREATE_USER(state, payload) {\n      state.userData = payload;\n    },\n    CREATE_TASKS(state, task) {\n      state.userData.push(task);\n    },\n    CREATE_TASK_USER(state, formData) {\n      state.tasks.push(formData);\n    },\n    ATT_TO_CART(state, payload) {\n      state.addToCarts.push(payload);\n      // console.log(\"cards object in store mutations ===>\", state.addToCarts);\n      // console.log(\"cards object in store mutations ===>\", state.addToCarts);\n    },\n\n    ADD_CARTS_COUNT(state, payload) {\n      // console.log(\"id oin store is \",state.addToCarts.id);\n      // console.log(\"id from payload in satore ios \", payload.id);\n\n      let index = addToCart.findIndex(obj => obj.id === targetId);\n      state.addToCarts.push(payload);\n      console.log(\"count in mutations is\", payload);\n    }\n  },\n  actions: {\n    createUser({\n      commit\n    }, form) {\n      commit('CREATE_USER', form);\n      console.log(form.password);\n      localStorage.setItem('userEmail', form.email);\n      localStorage.setItem('userPassword', form.password);\n      // console.log(userData);\n    },\n\n    validateUser({\n      commit\n    }, loginForm) {\n      commit('CREATE_USER', loginForm);\n    },\n    createTask({\n      commit\n    }, form) {\n      commit('CREATE_TASK_USER', form);\n      // localStorage.setItem('formTasks', this.state.tasks);\n      // console.log(localStorage.getItem('formTasks'))\n    },\n\n    updateTask(_, {\n      id,\n      payload\n    }) {\n      // console.log(\"payload in store\", payload);\n      // console.log(\"id in store\", id);\n      this.state.tasks.splice(id, 1, payload);\n    },\n    addToCart({\n      commit\n    }, payload) {\n      commit(\"ATT_TO_CART\", payload);\n      //  console.log(\"payload from action\", payload)\n    },\n\n    cartsCount({\n      commit\n    }, payload) {\n      commit('ADD_CARTS_COUNT', payload);\n      //  console.log(\"count in store is ==>\", count)\n    }\n  },\n\n  getters: {\n    getUser(state) {\n      return state.userData;\n    },\n    getTasks(state) {\n      return state.tasks;\n    },\n    getCarts(state) {\n      return state.addToCarts;\n    },\n    getCartsCount(state) {\n      return state.cartsCount;\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","userData","tasks","addToCarts","cartsCount","mutations","CREATE_USER","payload","CREATE_TASKS","task","push","CREATE_TASK_USER","formData","ATT_TO_CART","ADD_CARTS_COUNT","index","addToCart","findIndex","obj","id","targetId","console","log","actions","createUser","commit","form","password","localStorage","setItem","email","validateUser","loginForm","createTask","updateTask","_","splice","getters","getUser","getTasks","getCarts","getCartsCount"],"sources":["D:/Data/Web Development/TECNIQE/15_CRUD_Cart_IN VUE JS/PRODUCT_CRUD_OPERATION/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n// import VuexPersist from 'vuex-persistedstate';\n\nexport default createStore({\n  state: {\n    userData: [],\n    tasks: [],\n    addToCarts: [],\n    cartsCount: []\n  },\n  \n  mutations: {\n    CREATE_USER(state, payload)\n    {\n      state.userData = payload;\n    },\n    CREATE_TASKS(state, task) {\n      state.userData.push(task);\n    },\n    CREATE_TASK_USER(state,formData)\n    {\n      state.tasks.push(formData);\n      \n    }, \n    ATT_TO_CART(state,payload){\n      state.addToCarts.push(payload);\n      // console.log(\"cards object in store mutations ===>\", state.addToCarts);\n      // console.log(\"cards object in store mutations ===>\", state.addToCarts);\n     \n    }, \n    ADD_CARTS_COUNT(state, payload){\n      // console.log(\"id oin store is \",state.addToCarts.id);\n      // console.log(\"id from payload in satore ios \", payload.id);\n    \n    let index = addToCart.findIndex(obj => obj.id === targetId);\n\n      \n      state.addToCarts.push(payload);\n      console.log(\"count in mutations is\", payload )\n    }\n  },\n  actions: {\n    createUser({commit}, form)\n    {\n    commit('CREATE_USER', form)\n    console.log(form.password);\n    localStorage.setItem('userEmail', form.email);\n    localStorage.setItem('userPassword', form.password);\n    // console.log(userData);\n    }, \n    validateUser({commit},loginForm)\n    {\n      commit('CREATE_USER', loginForm);\n    \n    },\n   \n    createTask( {commit}, form) {\n      commit('CREATE_TASK_USER',form)\n      // localStorage.setItem('formTasks', this.state.tasks);\n      // console.log(localStorage.getItem('formTasks'))\n      \n    }, \n    updateTask(_, {id,payload})\n    {\n      // console.log(\"payload in store\", payload);\n      // console.log(\"id in store\", id);\n      this.state.tasks.splice(id, 1 , payload);\n    }, \n    addToCart({commit}, payload)\n    {\n    \n     commit(\"ATT_TO_CART\", payload);\n    //  console.log(\"payload from action\", payload)\n    }, \n    cartsCount({commit} , payload){\n     commit('ADD_CARTS_COUNT',  payload)\n    //  console.log(\"count in store is ==>\", count)\n  \n    }\n  },\n  getters: {\n    getUser(state)\n    {\n      return state.userData;\n    },\n    getTasks(state){\n       return state.tasks;\n    },\n    getCarts(state){\n      return state.addToCarts\n    }, \n    getCartsCount(state){\n     return state.cartsCount;\n    }, \n   \n  },\n})\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}