{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport SignUpview from '../views/SignUpview.vue';\nimport Loginview from '../views/LoginView.vue';\nimport DisplayList from '../views/DisplayListView.vue';\nimport createTask from '../views/createTodoview.vue';\nimport ViewTaskView from '../views/ViewTaskview.vue';\n// import UpdateTask from  '../views/UpdateTaskview';\nimport UpdateTask from '../views/UpdateTaskview.vue';\nimport CartsDisplayview from '../views/CartsDisplayView.vue';\n// for user routing \nimport AddToCart from '../UserViews/AddToCartView.vue';\nimport UserViewTask from '../UserViews/ViewTaskView.vue';\n//for navigation routing techniques \nimport store from '@/store';\nconst routes = [\n//admin routing \n{\n  path: '/',\n  name: 'home',\n  component: HomeView,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n},\n//signUp , login both same in user and admin \n{\n  path: '/signUp',\n  name: 'SignUp',\n  component: SignUpview,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: Loginview,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  }\n}, {\n  path: '/displayList',\n  name: 'DisplayList',\n  component: DisplayList,\n  meta: {\n    requiresAuth: true,\n    role: 'admin'\n  },\n  children: [{\n    path: 'createTask',\n    name: 'createTask',\n    component: createTask\n  }, {\n    path: 'viewTask',\n    name: 'viewTask',\n    component: ViewTaskView\n  }, {\n    path: 'updateTask',\n    name: 'updateTask',\n    component: UpdateTask\n  }, {\n    path: 'cart',\n    name: 'cart',\n    component: CartsDisplayview\n  }]\n},\n//Now for user routing \n{\n  path: '/UserAddToCart',\n  name: 'UserAddToCart',\n  component: AddToCart,\n  meta: {\n    requiresAuth: true,\n    role: 'user'\n  }\n}, {\n  path: '/UserViewTask',\n  name: 'UserViewTask',\n  component: UserViewTask,\n  meta: {\n    requiresAuth: true,\n    role: 'user'\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// router.beforeEach((to, from, next) => {\n//   if (to.matched && to.matched.some(route => routes.meta.requiresAuth && route.meta.role === 'user')) {\n//     if (store.state.isAuthenticated && store.state.role === 'user') {\n//       next('/UserViewTask')\n//     } else {\n//       next('/login'); // Redirect to login if not authenticated or not the right role\n//     }\n//   // } else {\n//   //   next(); // Allow navigation for other routes\n//   }\n// });\n// router.beforeEach((to, from, next) => {\n//   if (to.matched && to.matched.some(route => routes.meta.requiresAuth && route.meta.role === 'admin')) {\n//     if (store.state.isAuthenticated && store.state.role === 'admin') {\n//       next('/displayList')\n//     } else {\n//       next('/login'); // Redirect to login if not authenticated or not the right role\n//     }\n//   // } else {\n//   //   next(); // Allow navigation for other routes\n//   }\n// });\n//===================\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = store.getters['getUser'];\n  console.log(\"\");\n  if (isAuthenticated.slectedRole === 'admin') {\n    return {\n      name: \"DisplayList\"\n    };\n  } else if (isAuthenticated.slectedRole === 'user') {\n    return {\n      name: \"UserViewTask\"\n    };\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","SignUpview","Loginview","DisplayList","createTask","ViewTaskView","UpdateTask","CartsDisplayview","AddToCart","UserViewTask","store","routes","path","name","component","meta","requiresAuth","role","children","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","getters","console","log","slectedRole"],"sources":["D:/Data/Web Development/TECNIQE/15_CRUD_Cart_IN VUE JS/PRODUCT_CRUD_OPERATION/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport SignUpview from '../views/SignUpview.vue'\nimport Loginview from '../views/LoginView.vue'\nimport DisplayList from '../views/DisplayListView.vue'\nimport createTask from '../views/createTodoview.vue';\nimport ViewTaskView from '../views/ViewTaskview.vue';\n// import UpdateTask from  '../views/UpdateTaskview';\nimport UpdateTask from '../views/UpdateTaskview.vue'\nimport CartsDisplayview from '../views/CartsDisplayView.vue';\n// for user routing \nimport AddToCart  from '../UserViews/AddToCartView.vue';\nimport UserViewTask from '../UserViews/ViewTaskView.vue'\n//for navigation routing techniques \nimport store from '@/store'\nconst routes = [\n   //admin routing \n  {\n    path: '/',\n    name: 'home',\n    component: HomeView, \n    meta: { requiresAuth: true, role: 'admin' },\n  },\n  //signUp , login both same in user and admin \n  {\n    path: '/signUp',\n    name: 'SignUp',\n    component: SignUpview, \n    meta: { requiresAuth: true, role: 'admin' },\n  }, \n  {\n    path: '/login',\n    name: 'login',\n    component: Loginview, \n    meta: { requiresAuth: true, role: 'admin' },\n  }, \n  {\n    path: '/displayList',\n    name: 'DisplayList',\n    component: DisplayList,\n    meta: { requiresAuth: true, role: 'admin' },\n    children:[\n      {\n        path:'createTask',\n        name: 'createTask',\n        component: createTask\n      }, \n      {\n        path:'viewTask',\n        name: 'viewTask',\n        component: ViewTaskView\n      },\n      {\n        path:'updateTask',\n        name: 'updateTask',\n        component: UpdateTask\n      }, \n      {\n        path: 'cart',\n        name: 'cart',\n        component: CartsDisplayview\n      }\n    ], \n  }, //Now for user routing \n  {\n    path: '/UserAddToCart',\n    name: 'UserAddToCart',\n    component: AddToCart, \n    meta: { requiresAuth: true, role: 'user' }\n  }, \n  {\n    path: '/UserViewTask', \n    name: 'UserViewTask', \n    component: UserViewTask, \n    meta: { requiresAuth: true, role: 'user' }\n  }\n]\n\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// router.beforeEach((to, from, next) => {\n//   if (to.matched && to.matched.some(route => routes.meta.requiresAuth && route.meta.role === 'user')) {\n//     if (store.state.isAuthenticated && store.state.role === 'user') {\n//       next('/UserViewTask')\n//     } else {\n//       next('/login'); // Redirect to login if not authenticated or not the right role\n//     }\n//   // } else {\n//   //   next(); // Allow navigation for other routes\n//   }\n// });\n// router.beforeEach((to, from, next) => {\n//   if (to.matched && to.matched.some(route => routes.meta.requiresAuth && route.meta.role === 'admin')) {\n//     if (store.state.isAuthenticated && store.state.role === 'admin') {\n//       next('/displayList')\n//     } else {\n//       next('/login'); // Redirect to login if not authenticated or not the right role\n//     }\n//   // } else {\n//   //   next(); // Allow navigation for other routes\n//   }\n// });\n//===================\nrouter.beforeEach((to,from, next)=>{\n   const isAuthenticated = store.getters['getUser'];\n   console.log(\"\")\n   if(isAuthenticated.slectedRole === 'admin'){\n    return { name : \"DisplayList\"}\n   }\n   else if(isAuthenticated.slectedRole === 'user')\n   {\n    return { name : \"UserViewTask\"}\n   }\n   next();\n})\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}